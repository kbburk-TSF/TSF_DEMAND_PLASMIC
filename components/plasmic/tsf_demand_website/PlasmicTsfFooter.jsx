/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 8yhBRaKsBf3R2wKMhT5dUU
// Component: NmgYw5lHKANx
import * as React from "react";
import Link from "next/link";
import { useRouter } from "next/router";
import {
  PlasmicLink as PlasmicLink__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 8yhBRaKsBf3R2wKMhT5dUU/styleTokensProvider
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic.module.css"; // plasmic-import: 8yhBRaKsBf3R2wKMhT5dUU/projectcss
import sty from "./PlasmicTsfFooter.module.css"; // plasmic-import: NmgYw5lHKANx/css
import TsfLogoHorizontalWhiteSvgIcon from "./icons/PlasmicIcon__TsfLogoHorizontalWhiteSvg"; // plasmic-import: 1SSucpl3oFpS/icon

createPlasmicElementProxy;

export const PlasmicTsfFooter__VariantProps = new Array();

export const PlasmicTsfFooter__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicTsfFooter__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const styleTokensClassNames = _useStyleTokens();
  return (
    <div
      data-plasmic-name={"tsfFooter"}
      data-plasmic-override={overrides.tsfFooter}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        styleTokensClassNames,
        sty.tsfFooter
      )}
    >
      <div
        data-plasmic-name={"footerTop"}
        data-plasmic-override={overrides.footerTop}
        className={classNames(projectcss.all, sty.footerTop)}
      >
        <div
          data-plasmic-name={"container"}
          data-plasmic-override={overrides.container}
          className={classNames(projectcss.all, sty.container)}
        >
          <div
            data-plasmic-name={"columns"}
            data-plasmic-override={overrides.columns}
            className={classNames(projectcss.all, sty.columns)}
          >
            <div className={classNames(projectcss.all, sty.column__tjO1R)}>
              <TsfLogoHorizontalWhiteSvgIcon
                data-plasmic-name={"svg"}
                data-plasmic-override={overrides.svg}
                className={classNames(projectcss.all, sty.svg)}
                role={"img"}
              />

              <h5
                className={classNames(
                  projectcss.all,
                  projectcss.h5,
                  projectcss.__wab_text,
                  sty.h5__u4V3W
                )}
              >
                {"COMPANY"}
              </h5>
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__mDPey
                )}
                component={Link}
                href={`/about`}
                platform={"nextjs"}
              >
                {"About TSF"}
              </PlasmicLink__>
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__p9GVz
                )}
                component={Link}
                href={`/science`}
                platform={"nextjs"}
              >
                {"The Science"}
              </PlasmicLink__>
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__kU4BZ
                )}
                component={Link}
                href={`/investment`}
                platform={"nextjs"}
              >
                {"Investment Opportunity"}
              </PlasmicLink__>
            </div>
            <div className={classNames(projectcss.all, sty.column__pgal7)}>
              <h5
                className={classNames(
                  projectcss.all,
                  projectcss.h5,
                  projectcss.__wab_text,
                  sty.h5__uwtIg
                )}
              >
                {"PRODUCT"}
              </h5>
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__hNs8R
                )}
                component={Link}
                href={`/tsf-lite`}
                platform={"nextjs"}
              >
                {"TSF Lite App"}
              </PlasmicLink__>
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__eoE2V
                )}
                component={Link}
                href={`/pricing`}
                platform={"nextjs"}
              >
                {"Pricing"}
              </PlasmicLink__>
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__oTpao
                )}
                component={Link}
                href={`/demo`}
                platform={"nextjs"}
              >
                {"TSF Engine Demo"}
              </PlasmicLink__>
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link___3NmGf
                )}
                component={Link}
                href={`/case-studies`}
                platform={"nextjs"}
              >
                {"Case Studies"}
              </PlasmicLink__>
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__kJul3
                )}
                component={Link}
                href={`/interest`}
                platform={"nextjs"}
              >
                {"Join Beta"}
              </PlasmicLink__>
            </div>
            <div className={classNames(projectcss.all, sty.column___5FvRh)}>
              <h5
                className={classNames(
                  projectcss.all,
                  projectcss.h5,
                  projectcss.__wab_text,
                  sty.h5__efbDu
                )}
              >
                {"RESOURCES"}
              </h5>
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__hWwO
                )}
                component={Link}
                href={`/articles`}
                platform={"nextjs"}
              >
                {"Articles"}
              </PlasmicLink__>
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__y5P
                )}
                component={Link}
                platform={"nextjs"}
              >
                {"Demand Planning ROI"}
              </PlasmicLink__>
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__nzYl
                )}
                component={Link}
                platform={"nextjs"}
              >
                {"A Microscope for Time"}
              </PlasmicLink__>
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__yy7ZL
                )}
                component={Link}
                href={`/contact`}
                platform={"nextjs"}
              >
                {"Contact / Partners"}
              </PlasmicLink__>
            </div>
            <div className={classNames(projectcss.all, sty.column__a2DXi)}>
              <h5
                className={classNames(
                  projectcss.all,
                  projectcss.h5,
                  projectcss.__wab_text,
                  sty.h5__okC8O
                )}
              >
                {"LEGAL"}
              </h5>
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__bwQnt
                )}
                component={Link}
                href={`/privacy-policy`}
                platform={"nextjs"}
              >
                {"Privacy Policy"}
              </PlasmicLink__>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__tbZia
                )}
              >
                {
                  "Targeted Seasonal Forecasts Inc.\n254 Chapman Rd.\nSte. 208 #24609\nNewark, DE 19702"
                }
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        data-plasmic-name={"footerBottom"}
        data-plasmic-override={overrides.footerBottom}
        className={classNames(projectcss.all, sty.footerBottom)}
      >
        <div
          data-plasmic-name={"container2"}
          data-plasmic-override={overrides.container2}
          className={classNames(projectcss.all, sty.container2)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___9NRik
            )}
          >
            {
              "\u00a9 2025 Targeted Seasonal Forecasts, Inc. All Rights Reserved"
            }
          </div>
        </div>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  tsfFooter: [
    "tsfFooter",
    "footerTop",
    "container",
    "columns",
    "svg",
    "footerBottom",
    "container2"
  ],

  footerTop: ["footerTop", "container", "columns", "svg"],
  container: ["container", "columns", "svg"],
  columns: ["columns", "svg"],
  svg: ["svg"],
  footerBottom: ["footerBottom", "container2"],
  container2: ["container2"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicTsfFooter__ArgProps,
          internalVariantPropNames: PlasmicTsfFooter__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicTsfFooter__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "tsfFooter") {
    func.displayName = "PlasmicTsfFooter";
  } else {
    func.displayName = `PlasmicTsfFooter.${nodeName}`;
  }
  return func;
}

export const PlasmicTsfFooter = Object.assign(
  // Top-level PlasmicTsfFooter renders the root element
  makeNodeComponent("tsfFooter"),
  {
    // Helper components rendering sub-elements
    footerTop: makeNodeComponent("footerTop"),
    container: makeNodeComponent("container"),
    columns: makeNodeComponent("columns"),
    svg: makeNodeComponent("svg"),
    footerBottom: makeNodeComponent("footerBottom"),
    container2: makeNodeComponent("container2"),
    // Metadata about props expected for PlasmicTsfFooter
    internalVariantProps: PlasmicTsfFooter__VariantProps,
    internalArgProps: PlasmicTsfFooter__ArgProps
  }
);

export default PlasmicTsfFooter;
/* prettier-ignore-end */
