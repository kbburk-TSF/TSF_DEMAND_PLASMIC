/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 8yhBRaKsBf3R2wKMhT5dUU
// Component: toVy8xvGKMbE
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import {
  PlasmicImg as PlasmicImg__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  hasVariant
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import TsfDemandMainNavigation from "../../TsfDemandMainNavigation"; // plasmic-import: RS9jruOWtFtt/component
import Button from "../../Button"; // plasmic-import: -U7nCsYlsFbS/component
import TsfFooter from "../../TsfFooter"; // plasmic-import: NmgYw5lHKANx/component
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 8yhBRaKsBf3R2wKMhT5dUU/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 8yhBRaKsBf3R2wKMhT5dUU/styleTokensProvider
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic.module.css"; // plasmic-import: 8yhBRaKsBf3R2wKMhT5dUU/projectcss
import sty from "./PlasmicArticles.module.css"; // plasmic-import: toVy8xvGKMbE/css
import ArrowRightSvgIcon from "./icons/PlasmicIcon__ArrowRightSvg"; // plasmic-import: WXIx2uHDhf9R/icon

createPlasmicElementProxy;

export const PlasmicArticles__VariantProps = new Array();

export const PlasmicArticles__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicArticles__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const globalVariants = _useGlobalVariants();
  const styleTokensClassNames = _useStyleTokens();
  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            styleTokensClassNames,
            sty.root
          )}
        >
          <TsfDemandMainNavigation
            data-plasmic-name={"tsfDemandMainNavigation"}
            data-plasmic-override={overrides.tsfDemandMainNavigation}
            className={classNames(
              "__wab_instance",
              sty.tsfDemandMainNavigation
            )}
          />

          <div className={classNames(projectcss.all, sty.freeBox__ijWZ)}>
            <div
              data-plasmic-name={"pageBanner"}
              data-plasmic-override={overrides.pageBanner}
              className={classNames(projectcss.all, sty.pageBanner)}
            >
              <div className={classNames(projectcss.all, sty.freeBox___8HErv)}>
                <div className={classNames(projectcss.all, sty.columns__rqbIn)}>
                  <div className={classNames(projectcss.all, sty.column__dEZ)}>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__a8Oj)}
                    >
                      <h1
                        data-plasmic-name={"h1"}
                        data-plasmic-override={overrides.h1}
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1
                        )}
                      >
                        {"Articles"}
                      </h1>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vsajs
                        )}
                      >
                        {"Enter some text"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__jjMkh
                        )}
                      >
                        {
                          "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,"
                        }
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column___26Wp9)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__aTtxg)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "100%"
                          : "100%"
                      }
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "lazy"
                          : "lazy"
                      }
                      src={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? {
                              src: "/plasmic/tsf_demand_website/images/neonbrand3GznpblImWcUnsplashJpg.jpg",
                              fullWidth: 1920,
                              fullHeight: 1280,
                              aspectRatio: undefined
                            }
                          : {
                              src: "/plasmic/tsf_demand_website/images/neonbrand3GznpblImWcUnsplashJpg.jpg",
                              fullWidth: 1920,
                              fullHeight: 1280,
                              aspectRatio: undefined
                            }
                      }
                    />
                  </div>
                </div>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__ylqBz)}>
              <div className={classNames(projectcss.all, sty.freeBox__ldfNm)}>
                <div className={classNames(projectcss.all, sty.columns__tMoo4)}>
                  <div
                    className={classNames(projectcss.all, sty.column___9OAav)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.columns__w5HHo)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column___0Y2DZ
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img___8HsLg)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/tsf_demand_website/images/istockphoto1306171737170667AJpg2.jpg",
                            fullWidth: 509,
                            fullHeight: 340,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__eGEv9
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__wuU4E
                          )}
                        >
                          <h4
                            className={classNames(
                              projectcss.all,
                              projectcss.h4,
                              projectcss.__wab_text,
                              sty.h4__zr4Zy
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "Customer Loyalty Programs That Stick"
                              : "How Smarter Demand Planning Turns Data into Profit"}
                          </h4>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__whs1R
                            )}
                          >
                            {
                              "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ..."
                            }
                          </div>
                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.button__kb7I2
                            )}
                            end={
                              <ArrowRightSvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__fXlXd
                                )}
                                role={"img"}
                              />
                            }
                            iconEnd={true}
                            label={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__qHgG
                                )}
                              >
                                {"Read post"}
                              </div>
                            }
                          />
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__cJuYd)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.columns__v90A)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__dUjuE
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__yKa6O)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/tsf_demand_website/images/fakurianDesignPPTwRTkvXqUnsplashJpg.jpg",
                            fullWidth: 1920,
                            fullHeight: 1280,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__rsmdN
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__eLr2S
                          )}
                        >
                          <h4
                            className={classNames(
                              projectcss.all,
                              projectcss.h4,
                              projectcss.__wab_text,
                              sty.h4__zz6Sd
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "Customer Loyalty Programs That Stick"
                              : "Irregular Seasonal Models and a Microscope for Time"}
                          </h4>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__viI2
                            )}
                          >
                            {
                              "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ..."
                            }
                          </div>
                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.button__e9QFr
                            )}
                            end={
                              <ArrowRightSvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__r4JEm
                                )}
                                role={"img"}
                              />
                            }
                            iconEnd={true}
                            label={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___49BN
                                )}
                              >
                                {"Read post"}
                              </div>
                            }
                          />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <TsfFooter
                data-plasmic-name={"tsfFooter"}
                data-plasmic-override={overrides.tsfFooter}
                className={classNames("__wab_instance", sty.tsfFooter)}
              />
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "tsfDemandMainNavigation", "pageBanner", "h1", "tsfFooter"],
  tsfDemandMainNavigation: ["tsfDemandMainNavigation"],
  pageBanner: ["pageBanner", "h1"],
  h1: ["h1"],
  tsfFooter: ["tsfFooter"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicArticles__ArgProps,
          internalVariantPropNames: PlasmicArticles__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicArticles__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicArticles";
  } else {
    func.displayName = `PlasmicArticles.${nodeName}`;
  }
  return func;
}

export const PlasmicArticles = Object.assign(
  // Top-level PlasmicArticles renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    tsfDemandMainNavigation: makeNodeComponent("tsfDemandMainNavigation"),
    pageBanner: makeNodeComponent("pageBanner"),
    h1: makeNodeComponent("h1"),
    tsfFooter: makeNodeComponent("tsfFooter"),
    // Metadata about props expected for PlasmicArticles
    internalVariantProps: PlasmicArticles__VariantProps,
    internalArgProps: PlasmicArticles__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicArticles;
/* prettier-ignore-end */
