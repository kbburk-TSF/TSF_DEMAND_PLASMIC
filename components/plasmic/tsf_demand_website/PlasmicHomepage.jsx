/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 8yhBRaKsBf3R2wKMhT5dUU
// Component: pPnx7cCl0iri
import * as React from "react";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import {
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  hasVariant
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import TsfDemandMainNavigation from "../../TsfDemandMainNavigation"; // plasmic-import: RS9jruOWtFtt/component
import Button from "../../Button"; // plasmic-import: -U7nCsYlsFbS/component
import Button2 from "../../Button2"; // plasmic-import: IsImc8gJBadG/component
import TsfFooter from "../../TsfFooter"; // plasmic-import: NmgYw5lHKANx/component
import BlogPosts from "../../BlogPosts"; // plasmic-import: t8iMRGE7O8dB/component
import CtaBlock from "../../CtaBlock"; // plasmic-import: qoTEPcEAYg5b/component
import HeroSection from "../../HeroSection"; // plasmic-import: JNdKyXMmIYn1/component
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 8yhBRaKsBf3R2wKMhT5dUU/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 8yhBRaKsBf3R2wKMhT5dUU/styleTokensProvider
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic.module.css"; // plasmic-import: 8yhBRaKsBf3R2wKMhT5dUU/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: pPnx7cCl0iri/css
import CircleIcon from "./icons/PlasmicIcon__Circle"; // plasmic-import: iCnGomX0kBnc/icon
import Icon4Icon from "./icons/PlasmicIcon__Icon4"; // plasmic-import: s0pSL1_dtWEm/icon
import Icon11Icon from "./icons/PlasmicIcon__Icon11"; // plasmic-import: e15IDclT0vTC/icon
import Icon8Icon from "./icons/PlasmicIcon__Icon8"; // plasmic-import: FGJcG_uIECwR/icon
import Icon10Icon from "./icons/PlasmicIcon__Icon10"; // plasmic-import: WKmUSY2JMrqE/icon
import Icon13Icon from "./icons/PlasmicIcon__Icon13"; // plasmic-import: jJJqFQNMqxtj/icon
import ShopifySvg2Icon from "./icons/PlasmicIcon__ShopifySvg2"; // plasmic-import: ZY2ILszd07ta/icon

createPlasmicElementProxy;

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const globalVariants = _useGlobalVariants();
  const styleTokensClassNames = _useStyleTokens();
  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            styleTokensClassNames,
            sty.root,
            {
              [sty.rootglobal_unnamedGlobalGroupOfVariants_unnamedVariant]:
                hasVariant(
                  globalVariants,
                  "unnamedGlobalGroupOfVariants",
                  "unnamedVariant"
                )
            }
          )}
        >
          <TsfDemandMainNavigation
            data-plasmic-name={"tsfDemandMainNavigation"}
            data-plasmic-override={overrides.tsfDemandMainNavigation}
            className={classNames(
              "__wab_instance",
              sty.tsfDemandMainNavigation
            )}
          />

          <div className={classNames(projectcss.all, sty.freeBox__wUjrb)}>
            <div className={classNames(projectcss.all, sty.freeBox__cgm78)}>
              <div
                className={classNames(projectcss.all, sty.freeBox__eq8X9, {
                  [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__eq8X9Fzl1R]:
                    hasVariant(
                      globalVariants,
                      "unnamedGlobalGroupOfVariants",
                      "unnamedVariant"
                    )
                })}
              >
                <div className={classNames(projectcss.all, sty.freeBox__fFuWj)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__u9LG)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__p5IWi)}
                    >
                      <h1
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1___4AZ0Y,
                          {
                            [sty.h1global_unnamedGlobalGroupOfVariants_unnamedVariant___4AZ0Yfzl1R]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        {hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                          ? "Forecasts built for decision makers, not for data scientists."
                          : hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "Ready to accept or acquiesce willing."
                            : "Forecasts built for decision makers, not data scientists. "}
                      </h1>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__pgx5Z
                        )}
                      >
                        {
                          "\r\nPowered by a breakthrough in forecasting science, Targeted Seasonal Forecasts deliver daily predictions with month-long horizons \u2014 and quantified confidence in every single value. The proprietary library of irregular seasonal models reveals objective patterns in the historical data. Each forecast value is selected from at least 800 different forecast models, based on historical patterns of accuracy. \r\n"
                        }
                      </div>
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__x7Ciz
                        )}
                        color={"neutral"}
                        label={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__epLkg
                            )}
                          >
                            {"Try it yourself"}
                          </div>
                        }
                        onClick={async event => {
                          const $steps = {};
                          $steps["goToTsfEngineDemo"] = true
                            ? (() => {
                                const actionArgs = { destination: `/demo` };
                                return (({ destination }) => {
                                  if (
                                    typeof destination === "string" &&
                                    destination.startsWith("#")
                                  ) {
                                    document
                                      .getElementById(destination.substr(1))
                                      .scrollIntoView({ behavior: "smooth" });
                                  } else {
                                    __nextRouter?.push(destination);
                                  }
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["goToTsfEngineDemo"] != null &&
                            typeof $steps["goToTsfEngineDemo"] === "object" &&
                            typeof $steps["goToTsfEngineDemo"].then ===
                              "function"
                          ) {
                            $steps["goToTsfEngineDemo"] =
                              await $steps["goToTsfEngineDemo"];
                          }
                        }}
                        size={"extraLarge"}
                      />
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__sBxuq)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__frdAn)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"553px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/tsf_demand_website/images/tsfLogoStackedSvg.svg",
                        fullWidth: 612,
                        fullHeight: 515.2,
                        aspectRatio: 1.187888
                      }}
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
          <section
            data-plasmic-name={"features"}
            data-plasmic-override={overrides.features}
            className={classNames(projectcss.all, sty.features)}
          >
            <div className={classNames(projectcss.all, sty.column__kyp0L)}>
              <div className={classNames(projectcss.all, sty.freeBox__wkgCl)}>
                <div className={classNames(projectcss.all, sty.freeBox__xLiy7)}>
                  <div
                    className={classNames(projectcss.all, sty.columns__pilBw)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__lal1L)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__vKCmP
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ymhv5
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>
                              {"Traditional forecasts predict "}
                            </React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ textDecorationLine: "underline" }}
                            >
                              {"numbers"}
                            </span>
                            <React.Fragment>{", not "}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ textDecorationLine: "underline" }}
                            >
                              {"decisions"}
                            </span>
                            <React.Fragment>
                              {
                                ". They leave you to interpret what\u2019s normal. "
                              }
                            </React.Fragment>
                          </React.Fragment>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__xuoZq
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ fontStyle: "italic" }}
                            >
                              {
                                "Every merchant runs out of stock or over-orders because their \u201cforecast\u201d is a "
                              }
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{
                                fontStyle: "italic",
                                fontWeight: 700,
                                textDecorationLine: "underline"
                              }}
                            >
                              {"spreadsheet"}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ fontStyle: "italic" }}
                            >
                              {", not a "}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{
                                fontStyle: "italic",
                                fontWeight: 700,
                                textDecorationLine: "underline"
                              }}
                            >
                              {"signal"}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ fontStyle: "italic" }}
                            >
                              {"."}
                            </span>
                          </React.Fragment>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__snCAq
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>{""}</React.Fragment>
                            {
                              <h2
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h2,
                                  projectcss.__wab_text,
                                  sty.h2__r4Zff
                                )}
                              >
                                <React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{
                                      color: "var(--token-zrH0XRQElDBe)"
                                    }}
                                  >
                                    {"The TSF Soultion: "}
                                  </span>
                                  <React.Fragment>{"\n"}</React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{
                                      color: "var(--token-zrH0XRQElDBe)"
                                    }}
                                  >
                                    {
                                      "One Forecast. Every Cadence. Every Decision. "
                                    }
                                  </span>
                                </React.Fragment>
                              </h2>
                            }
                            <React.Fragment>{""}</React.Fragment>
                          </React.Fragment>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___2N6QG
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-Ry9eGMy91QvA)" }}
                            >
                              {
                                "At the start of each month, TSF gives you a forecast like this \u2014 the "
                              }
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{
                                color: "var(--token-Ry9eGMy91QvA)",
                                fontWeight: 700
                              }}
                            >
                              {"gold line"}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-Ry9eGMy91QvA)" }}
                            >
                              {" shows your expected daily sales, and the "}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{
                                color: "var(--token-Ry9eGMy91QvA)",
                                fontWeight: 700
                              }}
                            >
                              {"green zone"}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-Ry9eGMy91QvA)" }}
                            >
                              {" marks what\u2019s considered "}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{
                                color: "var(--token-Ry9eGMy91QvA)",
                                fontStyle: "italic"
                              }}
                            >
                              {"normal"}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-Ry9eGMy91QvA)" }}
                            >
                              {
                                ". The upper edge is your planning line: stock or produce enough to cover everything inside that band."
                              }
                            </span>
                          </React.Fragment>
                        </div>
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__kKg7B)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/tsf_demand_website/images/tsfInAction01Png2.png",
                            fullWidth: 1200,
                            fullHeight: 435,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__igkuR
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-Ry9eGMy91QvA)" }}
                            >
                              {
                                "As the month begins, your actual sales (the dotted line) appear automatically on the same chart. You can see at a glance whether performance is on pace, soft, or trending hot."
                              }
                            </span>
                          </React.Fragment>
                        </div>
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__n2Gj7)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/tsf_demand_website/images/tsfInAction02Png2.png",
                            fullWidth: 1200,
                            fullHeight: 435,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wCbJl
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-Ry9eGMy91QvA)" }}
                            >
                              {
                                "If actuals stay inside the green zone \u2192 you\u2019re on plan."
                              }
                            </span>
                          </React.Fragment>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__cDvqU
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-Ry9eGMy91QvA)" }}
                            >
                              {
                                "If they press the upper edge \u2192 reorder early."
                              }
                            </span>
                          </React.Fragment>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__jiusm
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-Ry9eGMy91QvA)" }}
                            >
                              {
                                "If they fall toward the bottom \u2192 hold or scale back."
                              }
                            </span>
                          </React.Fragment>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__susLe
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>{""}</React.Fragment>
                            {
                              <h3
                                data-plasmic-name={"h3"}
                                data-plasmic-override={overrides.h3}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h3,
                                  projectcss.__wab_text,
                                  sty.h3
                                )}
                              >
                                <React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{
                                      color: "var(--token-Ry9eGMy91QvA)"
                                    }}
                                  >
                                    {
                                      "That\u2019s the whole process\u2014no analysis, no dashboards full of noise, just a single chart that updates itself every day."
                                    }
                                  </span>
                                </React.Fragment>
                              </h3>
                            }
                            <React.Fragment>{""}</React.Fragment>
                          </React.Fragment>
                        </div>
                        <Button2
                          className={classNames(
                            "__wab_instance",
                            sty.button2__e0V5Y
                          )}
                          color={"tsfDark"}
                          end={
                            <Icon4Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__hoUbu
                              )}
                              role={"img"}
                            />
                          }
                          iconEnd={true}
                          label={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__jYvrq
                              )}
                            >
                              {"See TSF in Action"}
                            </div>
                          }
                          linkTo={`/tsf-action`}
                          start={
                            <CircleIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__sijhA
                              )}
                              role={"img"}
                            />
                          }
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__dRzR7)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__w3LN)}
                    >
                      <div
                        data-plasmic-name={"foreground3"}
                        data-plasmic-override={overrides.foreground3}
                        className={classNames(projectcss.all, sty.foreground3)}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__kfV2L
                          )}
                        >
                          {"Fewer Stockouts. Less Overstock. No Guessing. "}
                        </h2>
                      </div>
                      <div
                        data-plasmic-name={"foreground2"}
                        data-plasmic-override={overrides.foreground2}
                        className={classNames(projectcss.all, sty.foreground2)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__zqeJm
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ipvVr
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__gKrE5
                              )}
                            >
                              <Icon11Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__cF0D
                                )}
                                role={"img"}
                              />
                            </div>
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__mDkWx
                                )}
                              >
                                <Icon8Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__k9Emh
                                  )}
                                  role={"img"}
                                />
                              </div>
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__uuD3S
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__lB89N
                                )}
                              >
                                {"Start each month with clarity."}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___19U5Z
                                )}
                              >
                                {
                                  "The green zone defines your safe operating range for each day \u2014 your best- and worst-case expectations based on real data. "
                                }
                              </div>
                            </div>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__p4Bp
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__wnsAu
                              )}
                            >
                              <Icon10Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___1AUc5
                                )}
                                role={"img"}
                              />
                            </div>
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__qrP5I
                                )}
                              >
                                <Icon8Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__h7Kza
                                  )}
                                  role={"img"}
                                />
                              </div>
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__lTPre
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__feh6
                                )}
                              >
                                {"Watch volatility, not just direction."}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__uqEnl
                                )}
                              >
                                {
                                  "When the band widens, expect more variability \u2014\u00a0it's your signal to build flexibility into cash flow or supply. "
                                }
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__pnKIm
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__vb3P7
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__ghRie
                              )}
                            >
                              <Icon8Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___1Hz1S
                                )}
                                role={"img"}
                              />
                            </div>
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__poUlg
                                )}
                              >
                                <Icon8Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__uoqWc
                                  )}
                                  role={"img"}
                                />
                              </div>
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___7L319
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__ht21K
                                )}
                              >
                                {
                                  "Plan inventory, ads, and staffing within the band. "
                                }
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__tDctR
                                )}
                              >
                                {
                                  "The top of the band is the strong demand scenario. The bottom of the band is the conservative scenario. Plan your orders and budgets around the range that fits your risk tolerance. "
                                }
                              </div>
                            </div>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__svIu5
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__cxlR
                              )}
                            >
                              <Icon13Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__ww61S
                                )}
                                role={"img"}
                              />
                            </div>
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__exUtm
                                )}
                              >
                                <Icon8Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___1R2Yj
                                  )}
                                  role={"img"}
                                />
                              </div>
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__aZmNv
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___2FrMg
                                )}
                              >
                                {"Measure signal vs. noise."}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__xINlD
                                )}
                              >
                                {
                                  "If actual results stay inside the band, you're fine. If they consistently move above or below it, something has genuinely changed \u2014 that's a planning insight for next month, not a daily fire drill."
                                }
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__irFxI)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__n12L
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__t5Ja
                          )}
                        >
                          <ShopifySvg2Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__eem1V
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__c77Bt
                            )}
                          >
                            <Icon8Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__nlndn
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__xOEz4
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__gLtHu
                            )}
                          >
                            {"Built for Shopify Merchants"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hrlA6
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 700 }}
                              >
                                {"Set up once. Forecast forever. "}
                              </span>
                            </React.Fragment>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__eeB1H
                            )}
                          >
                            {
                              "Connect your Shopify store, pick your products, and TSF Lite does the rest. Forecasts run automatically, uploaded and delivered straight to your dashboard each month. "
                            }
                          </div>
                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.button__tcey7
                            )}
                            color={"tsfDark"}
                            label={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__laxy
                                )}
                              >
                                {"TSF Lite App"}
                              </div>
                            }
                            linkTo={`/tsf-lite`}
                            onClick={async event => {
                              const $steps = {};
                            }}
                          />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.columns__oxRvY)}>
                  <div
                    className={classNames(projectcss.all, sty.column__ddl3J)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__k7FYk
                      )}
                    >
                      {"TSF Lite App"}
                    </h1>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ljGy
                      )}
                    >
                      {
                        "Forecast inside Shopify. No setup, no spreadsheets, and no effort. "
                      }
                    </div>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__isXIr
                      )}
                      color={"neutral"}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__rFsgt
                          )}
                        >
                          {"TSF Lite App"}
                        </div>
                      }
                      linkTo={`/tsf-lite`}
                      onClick={async event => {
                        const $steps = {};
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__ik2Xz)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1___83SDs
                      )}
                    >
                      {"Case Study Program"}
                    </h1>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uEoG
                      )}
                    >
                      {
                        "Run your business with foresight, not forecasts. Join the TSF Lite Case Study Program. "
                      }
                    </div>
                    <Button
                      className={classNames("__wab_instance", sty.button__iM1X)}
                      color={"neutral"}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wMxo5
                          )}
                        >
                          {"Apply to Join the Case Study Program"}
                        </div>
                      }
                      linkTo={`/case-studies`}
                      onClick={async event => {
                        const $steps = {};
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__jlzoJ)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__vCxpA
                      )}
                    >
                      {"Discover the Science"}
                    </h1>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qyzbX
                      )}
                    >
                      {
                        "TSF forecasts use the Model of Temporal Inertia to achieve what traditional forecasts can\u2019t. "
                      }
                    </div>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__b1Igq
                      )}
                      color={"neutral"}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__oejpO
                          )}
                        >
                          {"Explore the Science "}
                        </div>
                      }
                      linkTo={`/science`}
                      onClick={async event => {
                        const $steps = {};
                      }}
                    />
                  </div>
                  <div className={classNames(projectcss.all, sty.column__fGkB)}>
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__hb1Qy
                      )}
                    >
                      {"Invest in the Future"}
                    </h1>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lzxV
                      )}
                    >
                      {
                        "Partner with TSF to bring next-generation forecasting to every data-driven business."
                      }
                    </div>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__c8EMf
                      )}
                      color={"neutral"}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___5RfiT
                          )}
                        >
                          {"Investment Opportunity"}
                        </div>
                      }
                      linkTo={`/investment`}
                      onClick={async event => {
                        const $steps = {};
                      }}
                    />
                  </div>
                </div>
              </div>
            </div>
          </section>
          <div className={classNames(projectcss.all, sty.freeBox__bssI3)}>
            <div className={classNames(projectcss.all, sty.columns__lmBz)}>
              <div className={classNames(projectcss.all, sty.column__l8Gaa)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2___8XC4
                  )}
                >
                  {"Stop guessing. Start forecasting. "}
                </h2>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__iVxUq
                  )}
                >
                  {
                    "Join the early access list and get your first forecasts the moment TSF Lite launches. "
                  }
                </h2>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__aTtg
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>
                      {
                        "TSF Lite is currently in pre-release. Early access merchants receive:\n"
                      }
                    </React.Fragment>
                    {
                      <ul
                        data-plasmic-name={"ul"}
                        data-plasmic-override={overrides.ul}
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__sajdi
                          )}
                        >
                          {"First access to the app at launch (early 2026)"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__wqwAb
                          )}
                        >
                          {"Locked-in beta pricing"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__qbksH
                          )}
                        >
                          {
                            "Priority consideration for Shopify case-sudy selection"
                          }
                        </li>
                      </ul>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__npY46)}>
                  <Button2
                    className={classNames(
                      "__wab_instance",
                      sty.button2___7NPxv
                    )}
                    color={"trueGold"}
                    end={
                      <Icon4Icon
                        className={classNames(projectcss.all, sty.svg__odeP3)}
                        role={"img"}
                      />
                    }
                    iconEnd={true}
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___19F1T
                        )}
                      >
                        {"Join the Beta"}
                      </div>
                    }
                    linkTo={`/interest`}
                    start={
                      <CircleIcon
                        className={classNames(projectcss.all, sty.svg__lCYxN)}
                        role={"img"}
                      />
                    }
                  />

                  <PlasmicLink__
                    data-plasmic-name={"link"}
                    data-plasmic-override={overrides.link}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link
                    )}
                    component={Link}
                    href={`/demo`}
                    platform={"nextjs"}
                  >
                    {"See Real Forecasts   "}
                  </PlasmicLink__>
                  <Icon4Icon
                    className={classNames(projectcss.all, sty.svg__imgUa)}
                    role={"img"}
                  />
                </div>
              </div>
            </div>
          </div>
          <TsfFooter
            data-plasmic-name={"tsfFooter"}
            data-plasmic-override={overrides.tsfFooter}
            className={classNames("__wab_instance", sty.tsfFooter)}
          />

          <BlogPosts
            data-plasmic-name={"blogPosts"}
            data-plasmic-override={overrides.blogPosts}
            className={classNames("__wab_instance", sty.blogPosts)}
          />

          <CtaBlock
            data-plasmic-name={"ctaBlock"}
            data-plasmic-override={overrides.ctaBlock}
            className={classNames("__wab_instance", sty.ctaBlock)}
          />

          <HeroSection
            data-plasmic-name={"heroSection"}
            data-plasmic-override={overrides.heroSection}
            className={classNames("__wab_instance", sty.heroSection)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "tsfDemandMainNavigation",
    "features",
    "h3",
    "foreground3",
    "foreground2",
    "ul",
    "link",
    "tsfFooter",
    "blogPosts",
    "ctaBlock",
    "heroSection"
  ],

  tsfDemandMainNavigation: ["tsfDemandMainNavigation"],
  features: ["features", "h3", "foreground3", "foreground2"],
  h3: ["h3"],
  foreground3: ["foreground3"],
  foreground2: ["foreground2"],
  ul: ["ul"],
  link: ["link"],
  tsfFooter: ["tsfFooter"],
  blogPosts: ["blogPosts"],
  ctaBlock: ["ctaBlock"],
  heroSection: ["heroSection"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    tsfDemandMainNavigation: makeNodeComponent("tsfDemandMainNavigation"),
    features: makeNodeComponent("features"),
    h3: makeNodeComponent("h3"),
    foreground3: makeNodeComponent("foreground3"),
    foreground2: makeNodeComponent("foreground2"),
    ul: makeNodeComponent("ul"),
    link: makeNodeComponent("link"),
    tsfFooter: makeNodeComponent("tsfFooter"),
    blogPosts: makeNodeComponent("blogPosts"),
    ctaBlock: makeNodeComponent("ctaBlock"),
    heroSection: makeNodeComponent("heroSection"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
