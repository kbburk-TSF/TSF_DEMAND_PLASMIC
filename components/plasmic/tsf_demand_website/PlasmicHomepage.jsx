/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 8yhBRaKsBf3R2wKMhT5dUU
// Component: pPnx7cCl0iri
import * as React from "react";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import {
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  hasVariant
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import TsfDemandMainNavigation from "../../TsfDemandMainNavigation"; // plasmic-import: RS9jruOWtFtt/component
import Button from "../../Button"; // plasmic-import: -U7nCsYlsFbS/component
import Button2 from "../../Button2"; // plasmic-import: IsImc8gJBadG/component
import HowToUseYourForecast from "../../HowToUseYourForecast"; // plasmic-import: udcHmc-MXrK7/component
import TsfFooter from "../../TsfFooter"; // plasmic-import: NmgYw5lHKANx/component
import BlogPosts from "../../BlogPosts"; // plasmic-import: t8iMRGE7O8dB/component
import CtaBlock from "../../CtaBlock"; // plasmic-import: qoTEPcEAYg5b/component
import HeroSection from "../../HeroSection"; // plasmic-import: JNdKyXMmIYn1/component
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 8yhBRaKsBf3R2wKMhT5dUU/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 8yhBRaKsBf3R2wKMhT5dUU/styleTokensProvider
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic.module.css"; // plasmic-import: 8yhBRaKsBf3R2wKMhT5dUU/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: pPnx7cCl0iri/css
import CircleIcon from "./icons/PlasmicIcon__Circle"; // plasmic-import: iCnGomX0kBnc/icon
import Icon4Icon from "./icons/PlasmicIcon__Icon4"; // plasmic-import: s0pSL1_dtWEm/icon

createPlasmicElementProxy;

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const globalVariants = _useGlobalVariants();
  const styleTokensClassNames = _useStyleTokens();
  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            styleTokensClassNames,
            sty.root,
            {
              [sty.rootglobal_unnamedGlobalGroupOfVariants_unnamedVariant]:
                hasVariant(
                  globalVariants,
                  "unnamedGlobalGroupOfVariants",
                  "unnamedVariant"
                )
            }
          )}
        >
          <TsfDemandMainNavigation
            data-plasmic-name={"tsfDemandMainNavigation"}
            data-plasmic-override={overrides.tsfDemandMainNavigation}
            className={classNames(
              "__wab_instance",
              sty.tsfDemandMainNavigation
            )}
          />

          <div className={classNames(projectcss.all, sty.freeBox__wUjrb)}>
            <div className={classNames(projectcss.all, sty.freeBox__cgm78)}>
              <div
                className={classNames(projectcss.all, sty.freeBox__eq8X9, {
                  [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__eq8X9Fzl1R]:
                    hasVariant(
                      globalVariants,
                      "unnamedGlobalGroupOfVariants",
                      "unnamedVariant"
                    )
                })}
              >
                <div className={classNames(projectcss.all, sty.freeBox__fFuWj)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__u9LG)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__p5IWi)}
                    >
                      <h1
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1___4AZ0Y,
                          {
                            [sty.h1global_unnamedGlobalGroupOfVariants_unnamedVariant___4AZ0Yfzl1R]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        {hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                          ? "Forecasts built for decision makers, not for data scientists."
                          : hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "Ready to accept or acquiesce willing."
                            : "The Decision Framework for Timing Every Business Move"}
                      </h1>
                      <h1
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1__csGh0,
                          {
                            [sty.h1global_unnamedGlobalGroupOfVariants_unnamedVariant__csGh0Fzl1R]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        {hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                          ? "Forecasts built for decision makers, not for data scientists."
                          : hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "Ready to accept or acquiesce willing."
                            : "It\u2019s not about guessing what happens next. It\u2019s about knowing what\u2019s happening now. "}
                      </h1>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__pgx5Z
                        )}
                      >
                        {
                          "Instead of predicting the future, TSF translates complex data into clear, immediate direction\u2014showing when to hold steady, when to grow, and when to protect. It gives leaders a simple, visual way to recognize opportunity and risk in real time, so actions match reality."
                        }
                      </div>
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__x7Ciz
                        )}
                        color={"neutral"}
                        label={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__epLkg
                            )}
                          >
                            {"Try it yourself"}
                          </div>
                        }
                        onClick={async event => {
                          const $steps = {};
                          $steps["goToTsfEngineDemo"] = true
                            ? (() => {
                                const actionArgs = { destination: `/demo` };
                                return (({ destination }) => {
                                  if (
                                    typeof destination === "string" &&
                                    destination.startsWith("#")
                                  ) {
                                    document
                                      .getElementById(destination.substr(1))
                                      .scrollIntoView({ behavior: "smooth" });
                                  } else {
                                    __nextRouter?.push(destination);
                                  }
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["goToTsfEngineDemo"] != null &&
                            typeof $steps["goToTsfEngineDemo"] === "object" &&
                            typeof $steps["goToTsfEngineDemo"].then ===
                              "function"
                          ) {
                            $steps["goToTsfEngineDemo"] =
                              await $steps["goToTsfEngineDemo"];
                          }
                        }}
                        size={"extraLarge"}
                      />
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__sBxuq)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__frdAn)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"553px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/tsf_demand_website/images/tsfLogoStackedSvg.svg",
                        fullWidth: 612,
                        fullHeight: 515.2,
                        aspectRatio: 1.187888
                      }}
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
          <section
            data-plasmic-name={"features"}
            data-plasmic-override={overrides.features}
            className={classNames(projectcss.all, sty.features)}
          >
            <div className={classNames(projectcss.all, sty.column__kyp0L)}>
              <div className={classNames(projectcss.all, sty.freeBox__wkgCl)}>
                <div className={classNames(projectcss.all, sty.freeBox__xLiy7)}>
                  <div
                    className={classNames(projectcss.all, sty.columns__pilBw)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__lal1L)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__vKCmP
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ymhv5
                          )}
                        >
                          {
                            "Building a business is hard. Running one shouldn\u2019t be."
                          }
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__iVlts
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-Ry9eGMy91QvA)" }}
                            >
                              {"When you\u2019re "}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{
                                color: "var(--token-Ry9eGMy91QvA)",
                                fontWeight: 700
                              }}
                            >
                              {"building"}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-Ry9eGMy91QvA)" }}
                            >
                              {
                                ", everything\u2019s uncertain \u2014 you\u2019re "
                              }
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{
                                color: "var(--token-Ry9eGMy91QvA)",
                                fontWeight: 700
                              }}
                            >
                              {"creating"}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-Ry9eGMy91QvA)" }}
                            >
                              {
                                " structure, systems, and stability from scratch."
                              }
                            </span>
                          </React.Fragment>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ssKt4
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-Ry9eGMy91QvA)" }}
                            >
                              {
                                "But once you\u2019re running, the game changes. It\u2019s not about building anymore. It\u2019s about "
                              }
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{
                                color: "var(--token-Ry9eGMy91QvA)",
                                fontWeight: 700
                              }}
                            >
                              {"maintaining"}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-Ry9eGMy91QvA)" }}
                            >
                              {" what works and "}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{
                                color: "var(--token-Ry9eGMy91QvA)",
                                fontWeight: 700
                              }}
                            >
                              {"guiding"}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-Ry9eGMy91QvA)" }}
                            >
                              {
                                " what\u2019s next. And in that game, there are only three possible moves:"
                              }
                            </span>
                          </React.Fragment>
                        </div>
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__k3MKk
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-ElSOFvpR3TI_)" }}
                            >
                              {"Hold"}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-Ry9eGMy91QvA)" }}
                            >
                              {". "}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-vQyax-nfo-J2)" }}
                            >
                              {"Grow"}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-Ry9eGMy91QvA)" }}
                            >
                              {". "}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-zrH0XRQElDBe)" }}
                            >
                              {"Protect"}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-Ry9eGMy91QvA)" }}
                            >
                              {". "}
                            </span>
                          </React.Fragment>
                        </h3>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__hi6X5
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-Ry9eGMy91QvA)" }}
                            >
                              {
                                "Every decision \u2014\u00a0every hire, every order, every campaign \u2014 falls into one of those three categories. "
                              }
                            </span>
                          </React.Fragment>
                        </div>
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__tRrTa
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-ElSOFvpR3TI_)" }}
                            >
                              {"Hold"}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-Ry9eGMy91QvA)" }}
                            >
                              {". "}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-vQyax-nfo-J2)" }}
                            >
                              {"Grow"}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-Ry9eGMy91QvA)" }}
                            >
                              {". "}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-zrH0XRQElDBe)" }}
                            >
                              {"Protect"}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-Ry9eGMy91QvA)" }}
                            >
                              {". "}
                            </span>
                          </React.Fragment>
                        </h3>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__h6J9O
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-Ry9eGMy91QvA)" }}
                            >
                              {
                                "The hard part isn\u2019t choosing what to do. It\u2019s "
                              }
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{
                                color: "var(--token-Ry9eGMy91QvA)",
                                fontWeight: 700
                              }}
                            >
                              {"knowing which one to do right now"}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-Ry9eGMy91QvA)" }}
                            >
                              {". That's where TSF comes in. "}
                            </span>
                          </React.Fragment>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__cFj1W
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>
                              {
                                "TSF tells you, at a glance whether this moment is normal or not \u2014\u00a0and whether it's time to "
                              }
                            </React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-ElSOFvpR3TI_)" }}
                            >
                              {"hold"}
                            </span>
                            <React.Fragment>{", "}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-vQyax-nfo-J2)" }}
                            >
                              {"grow"}
                            </span>
                            <React.Fragment>{", or "}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-zrH0XRQElDBe)" }}
                            >
                              {"protect"}
                            </span>
                            <React.Fragment>{". "}</React.Fragment>
                          </React.Fragment>
                        </div>
                        <Button2
                          className={classNames(
                            "__wab_instance",
                            sty.button2__e0V5Y
                          )}
                          color={"tsfDark"}
                          end={
                            <Icon4Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__hoUbu
                              )}
                              role={"img"}
                            />
                          }
                          iconEnd={true}
                          label={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__jYvrq
                              )}
                            >
                              {"See TSF in Action"}
                            </div>
                          }
                          linkTo={`/tsf-action`}
                          start={
                            <CircleIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__sijhA
                              )}
                              role={"img"}
                            />
                          }
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__vJv7W)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.columns__ewpau)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__axH6A
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__iOmxQ
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__d0JW3
                            )}
                          >
                            {"The Forecast That Defines Normal"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vi7Ei
                            )}
                          >
                            {
                              "When performance stays within \u201dnormal,\u201d you hold. When it moves outside, you act."
                            }
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__mj9Wi
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>
                                {
                                  "Each TSF forecast defines that boundary. The "
                                }
                              </React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 900 }}
                              >
                                {"gold line"}
                              </span>
                              <React.Fragment>
                                {
                                  " represents the expected value for each date, chosen from more than "
                                }
                              </React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 900 }}
                              >
                                {"800 competing forecast models"}
                              </span>
                              <React.Fragment>
                                {" based on proven historical accuracy. The "}
                              </React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 900 }}
                              >
                                {"green zone"}
                              </span>
                              <React.Fragment>
                                {
                                  " marks the confidence interval built from that same accuracy record \u2014 it's the statistical range of what\u2019s normal. When actuals fall inside the zone, conditions are stable. When they break above or below it, opportunity knocks. "
                                }
                              </React.Fragment>
                            </React.Fragment>
                          </div>
                        </div>
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__rhy9)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/tsf_demand_website/images/tsfInAction4UpPng.png",
                            fullWidth: 1500,
                            fullHeight: 778,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                    </div>
                  </div>
                </div>
                <HowToUseYourForecast
                  data-plasmic-name={"tsfLiteFewerStockouts"}
                  data-plasmic-override={overrides.tsfLiteFewerStockouts}
                  className={classNames(
                    "__wab_instance",
                    sty.tsfLiteFewerStockouts
                  )}
                />

                <div className={classNames(projectcss.all, sty.columns__oxRvY)}>
                  <div
                    className={classNames(projectcss.all, sty.column__ddl3J)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__k7FYk
                      )}
                    >
                      {"TSF Lite App"}
                    </h1>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ljGy
                      )}
                    >
                      {
                        "Forecast inside Shopify. No setup, no spreadsheets, and no effort. "
                      }
                    </div>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__isXIr
                      )}
                      color={"neutral"}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__rFsgt
                          )}
                        >
                          {"TSF Lite App"}
                        </div>
                      }
                      linkTo={`/tsf-lite`}
                      onClick={async event => {
                        const $steps = {};
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__ik2Xz)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1___83SDs
                      )}
                    >
                      {"Case Study Program"}
                    </h1>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uEoG
                      )}
                    >
                      {
                        "Run your business with foresight, not forecasts. Join the TSF Lite Case Study Program. "
                      }
                    </div>
                    <Button
                      className={classNames("__wab_instance", sty.button__iM1X)}
                      color={"neutral"}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wMxo5
                          )}
                        >
                          {"Apply to Join the Case Study Program"}
                        </div>
                      }
                      linkTo={`/case-studies`}
                      onClick={async event => {
                        const $steps = {};
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__jlzoJ)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__vCxpA
                      )}
                    >
                      {"Discover the Science"}
                    </h1>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qyzbX
                      )}
                    >
                      {
                        "TSF forecasts use the Model of Temporal Inertia to achieve what traditional forecasts can\u2019t. "
                      }
                    </div>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__b1Igq
                      )}
                      color={"neutral"}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__oejpO
                          )}
                        >
                          {"Explore the Science "}
                        </div>
                      }
                      linkTo={`/science`}
                      onClick={async event => {
                        const $steps = {};
                      }}
                    />
                  </div>
                  <div className={classNames(projectcss.all, sty.column__fGkB)}>
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__hb1Qy
                      )}
                    >
                      {"Invest in the Future"}
                    </h1>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lzxV
                      )}
                    >
                      {
                        "Partner with TSF to bring next-generation forecasting to every data-driven business."
                      }
                    </div>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__c8EMf
                      )}
                      color={"neutral"}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___5RfiT
                          )}
                        >
                          {"Investment Opportunity"}
                        </div>
                      }
                      linkTo={`/investment`}
                      onClick={async event => {
                        const $steps = {};
                      }}
                    />
                  </div>
                </div>
              </div>
            </div>
          </section>
          <div className={classNames(projectcss.all, sty.freeBox__bssI3)}>
            <div className={classNames(projectcss.all, sty.columns__lmBz)}>
              <div className={classNames(projectcss.all, sty.column__l8Gaa)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2___8XC4
                  )}
                >
                  {"Stop guessing. Start forecasting. "}
                </h2>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__iVxUq
                  )}
                >
                  {
                    "Join the early access list and get your first forecasts the moment TSF Lite launches. "
                  }
                </h2>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__aTtg
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>
                      {
                        "TSF Lite is currently in pre-release. Early access merchants receive:\n"
                      }
                    </React.Fragment>
                    {
                      <ul
                        data-plasmic-name={"ul"}
                        data-plasmic-override={overrides.ul}
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__sajdi
                          )}
                        >
                          {"First access to the app at launch (early 2026)"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__wqwAb
                          )}
                        >
                          {"Locked-in beta pricing"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__qbksH
                          )}
                        >
                          {
                            "Priority consideration for Shopify case-sudy selection"
                          }
                        </li>
                      </ul>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__npY46)}>
                  <Button2
                    className={classNames(
                      "__wab_instance",
                      sty.button2___7NPxv
                    )}
                    color={"trueGold"}
                    end={
                      <Icon4Icon
                        className={classNames(projectcss.all, sty.svg__odeP3)}
                        role={"img"}
                      />
                    }
                    iconEnd={true}
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___19F1T
                        )}
                      >
                        {"Join the Beta"}
                      </div>
                    }
                    linkTo={`/interest`}
                    start={
                      <CircleIcon
                        className={classNames(projectcss.all, sty.svg__lCYxN)}
                        role={"img"}
                      />
                    }
                  />

                  <PlasmicLink__
                    data-plasmic-name={"link"}
                    data-plasmic-override={overrides.link}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link
                    )}
                    component={Link}
                    href={`/demo`}
                    platform={"nextjs"}
                  >
                    {"See Real Forecasts   "}
                  </PlasmicLink__>
                  <Icon4Icon
                    className={classNames(projectcss.all, sty.svg__imgUa)}
                    role={"img"}
                  />
                </div>
              </div>
            </div>
          </div>
          <TsfFooter
            data-plasmic-name={"tsfFooter"}
            data-plasmic-override={overrides.tsfFooter}
            className={classNames("__wab_instance", sty.tsfFooter)}
          />

          <BlogPosts
            data-plasmic-name={"blogPosts"}
            data-plasmic-override={overrides.blogPosts}
            className={classNames("__wab_instance", sty.blogPosts)}
          />

          <CtaBlock
            data-plasmic-name={"ctaBlock"}
            data-plasmic-override={overrides.ctaBlock}
            className={classNames("__wab_instance", sty.ctaBlock)}
          />

          <HeroSection
            data-plasmic-name={"heroSection"}
            data-plasmic-override={overrides.heroSection}
            className={classNames("__wab_instance", sty.heroSection)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "tsfDemandMainNavigation",
    "features",
    "tsfLiteFewerStockouts",
    "ul",
    "link",
    "tsfFooter",
    "blogPosts",
    "ctaBlock",
    "heroSection"
  ],

  tsfDemandMainNavigation: ["tsfDemandMainNavigation"],
  features: ["features", "tsfLiteFewerStockouts"],
  tsfLiteFewerStockouts: ["tsfLiteFewerStockouts"],
  ul: ["ul"],
  link: ["link"],
  tsfFooter: ["tsfFooter"],
  blogPosts: ["blogPosts"],
  ctaBlock: ["ctaBlock"],
  heroSection: ["heroSection"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    tsfDemandMainNavigation: makeNodeComponent("tsfDemandMainNavigation"),
    features: makeNodeComponent("features"),
    tsfLiteFewerStockouts: makeNodeComponent("tsfLiteFewerStockouts"),
    ul: makeNodeComponent("ul"),
    link: makeNodeComponent("link"),
    tsfFooter: makeNodeComponent("tsfFooter"),
    blogPosts: makeNodeComponent("blogPosts"),
    ctaBlock: makeNodeComponent("ctaBlock"),
    heroSection: makeNodeComponent("heroSection"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
