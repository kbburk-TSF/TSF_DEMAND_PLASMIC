/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 8yhBRaKsBf3R2wKMhT5dUU
// Component: EIhFDa_YpuBB
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import {
  PlasmicImg as PlasmicImg__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  hasVariant
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import TsfDemandMainNavigation from "../../TsfDemandMainNavigation"; // plasmic-import: RS9jruOWtFtt/component
import { BaseButton } from "@plasmicpkgs/react-aria/skinny/registerButton";
import TsfFooter from "../../TsfFooter"; // plasmic-import: NmgYw5lHKANx/component
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 8yhBRaKsBf3R2wKMhT5dUU/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 8yhBRaKsBf3R2wKMhT5dUU/styleTokensProvider
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic.module.css"; // plasmic-import: 8yhBRaKsBf3R2wKMhT5dUU/projectcss
import sty from "./PlasmicTsfLiteApp.module.css"; // plasmic-import: EIhFDa_YpuBB/css
import Icon16Icon from "./icons/PlasmicIcon__Icon16"; // plasmic-import: -9-04Eq-w1pK/icon
import CircleIcon from "./icons/PlasmicIcon__Circle"; // plasmic-import: iCnGomX0kBnc/icon
import ChevronDownIcon from "./icons/PlasmicIcon__ChevronDown"; // plasmic-import: psfpTc-XGOO7/icon

createPlasmicElementProxy;

export const PlasmicTsfLiteApp__VariantProps = new Array();

export const PlasmicTsfLiteApp__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicTsfLiteApp__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const globalVariants = _useGlobalVariants();
  const styleTokensClassNames = _useStyleTokens();
  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            styleTokensClassNames,
            sty.root
          )}
        >
          <TsfDemandMainNavigation
            data-plasmic-name={"tsfDemandMainNavigation"}
            data-plasmic-override={overrides.tsfDemandMainNavigation}
            className={classNames(
              "__wab_instance",
              sty.tsfDemandMainNavigation
            )}
          />

          <div
            data-plasmic-name={"pageBanner"}
            data-plasmic-override={overrides.pageBanner}
            className={classNames(projectcss.all, sty.pageBanner)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__cxUqH)}>
              <div className={classNames(projectcss.all, sty.columns___8XOq7)}>
                <div className={classNames(projectcss.all, sty.column___5CWuJ)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__rLrPo)}
                  >
                    <h1
                      data-plasmic-name={"h1"}
                      data-plasmic-override={overrides.h1}
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1
                      )}
                    >
                      {"Our Features "}
                    </h1>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jn8Vg
                      )}
                    >
                      {
                        "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,"
                      }
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column___0P2KQ)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__psZuj)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "100%"
                        : "100%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "lazy"
                        : "lazy"
                    }
                    src={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? {
                            src: "/plasmic/tsf_demand_website/images/_3ThumbJpg.jpg",
                            fullWidth: 700,
                            fullHeight: 466,
                            aspectRatio: undefined
                          }
                        : {
                            src: "/plasmic/tsf_demand_website/images/williamHook9E9Pd9BlAtoUnsplashJpg.jpg",
                            fullWidth: 1920,
                            fullHeight: 1280,
                            aspectRatio: undefined
                          }
                    }
                  />
                </div>
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__byLsV)}>
            <section
              data-plasmic-name={"section"}
              data-plasmic-override={overrides.section}
              className={classNames(projectcss.all, sty.section)}
            >
              <div
                data-plasmic-name={"foreground"}
                data-plasmic-override={overrides.foreground}
                className={classNames(projectcss.all, sty.foreground)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__thV1Q)}>
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__nb6G
                    )}
                  >
                    {"The standard Lorem Ipsum passage"}
                  </h3>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vNzdc
                    )}
                  >
                    {
                      "Vitae sed sem a justo mauris potenti a primis vivamus justo tempor viverra adipiscing convallis fusce odio condimentum mi parturient ultricies."
                    }
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7Cjbl
                    )}
                  >
                    {
                      "Vitae sed sem a justo mauris potenti a primis vivamus justo tempor viverra adipiscing convallis fusce odio condimentum mi parturient ultricies."
                    }
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__avNTl)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___1YWqB)}
                  >
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__jkShu
                      )}
                    >
                      {"Built on capability"}
                    </h5>
                    <Icon16Icon
                      className={classNames(projectcss.all, sty.svg__wIuMl)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__dvzYn)}
                  >
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__pl0LY
                      )}
                    >
                      {"Highly energetic"}
                    </h5>
                    <Icon16Icon
                      className={classNames(projectcss.all, sty.svg__wLkbL)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__cvZ3D)}
                  >
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__znxYp
                      )}
                    >
                      {"100% transparency and accountability"}
                    </h5>
                    <Icon16Icon
                      className={classNames(projectcss.all, sty.svg__smzzf)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__rNzMh)}
                  >
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__quyd
                      )}
                    >
                      {"Refreshing clarity"}
                    </h5>
                    <Icon16Icon
                      className={classNames(projectcss.all, sty.svg__uAeXj)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___7Dmsc)}
                  >
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__zpbj8
                      )}
                    >
                      {"Modern results"}
                    </h5>
                    <Icon16Icon
                      className={classNames(projectcss.all, sty.svg__bN6Dh)}
                      role={"img"}
                    />
                  </div>
                </div>
              </div>
            </section>
            <div className={classNames(projectcss.all, sty.freeBox__wIWmy)}>
              <div className={classNames(projectcss.all, sty.freeBox__iIumv)}>
                <div className={classNames(projectcss.all, sty.freeBox__koJqj)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__nLA1)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___4PmCx
                      )}
                    >
                      <div
                        data-plasmic-name={"copy"}
                        data-plasmic-override={overrides.copy}
                        className={classNames(projectcss.all, sty.copy)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__r52K
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xkDRw
                            )}
                          >
                            {"Welcome"}
                          </div>
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3___7DGnq
                            )}
                          >
                            {"The standard Lorem "}
                          </h3>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___7V4Bv
                            )}
                          >
                            {
                              "Vitae sed sem a justo mauris potenti a primis vivamus justo tempor viverra adipiscing convallis fusce odio condimentum mi parturient ultricies."
                            }
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__dyk1N
                          )}
                        >
                          <BaseButton
                            className={classNames(
                              "__wab_instance",
                              sty.ariaButton__r3Q4A
                            )}
                            target={
                              $props.openLinkInNewTab ? "_blank" : "_self"
                            }
                          >
                            {false ? (
                              <div
                                data-plasmic-name={"softBackground3"}
                                data-plasmic-override={
                                  overrides.softBackground3
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.softBackground3
                                )}
                              />
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"border3"}
                                data-plasmic-override={overrides.border3}
                                className={classNames(
                                  projectcss.all,
                                  sty.border3
                                )}
                              />
                            ) : null}
                            <div
                              data-plasmic-name={"interactionEffect3"}
                              data-plasmic-override={
                                overrides.interactionEffect3
                              }
                              className={classNames(
                                projectcss.all,
                                sty.interactionEffect3
                              )}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__n8XPr
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__eNl9Y
                                )}
                              >
                                <CircleIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__mNgI
                                  )}
                                  role={"img"}
                                />
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__pduZj
                                )}
                              >
                                {"Start Now"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__lQxMa
                                )}
                              >
                                <ChevronDownIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___7FF9X
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </div>
                          </BaseButton>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"art"}
                    data-plasmic-override={overrides.art}
                    className={classNames(projectcss.all, sty.art)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__caOmW)}
                      displayHeight={"100%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={
                        "https://images.unsplash.com/photo-1520333789090-1afc82db536a?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2851&q=80"
                      }
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__pvUh)}
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__jjPU)}>
            <div className={classNames(projectcss.all, sty.columns__z41Up)}>
              <div className={classNames(projectcss.all, sty.column__e1Vx)}>
                <h2
                  data-plasmic-name={"h2"}
                  data-plasmic-override={overrides.h2}
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2
                  )}
                >
                  {"Make your call to action here."}
                </h2>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___8JaSi
                  )}
                >
                  {"Lorem ipsum dolor sit amet, consectetur adipiscing elit."}
                </div>
                <BaseButton
                  className={classNames(
                    "__wab_instance",
                    sty.ariaButton__rh66X
                  )}
                  target={$props.openLinkInNewTab ? "_blank" : "_self"}
                >
                  {false ? (
                    <div
                      data-plasmic-name={"softBackground"}
                      data-plasmic-override={overrides.softBackground}
                      className={classNames(projectcss.all, sty.softBackground)}
                    />
                  ) : null}
                  {false ? (
                    <div
                      data-plasmic-name={"border"}
                      data-plasmic-override={overrides.border}
                      className={classNames(projectcss.all, sty.border)}
                    />
                  ) : null}
                  <div
                    data-plasmic-name={"interactionEffect"}
                    data-plasmic-override={overrides.interactionEffect}
                    className={classNames(
                      projectcss.all,
                      sty.interactionEffect
                    )}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__vy1Nj)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__jMzZy)}
                    >
                      <CircleIcon
                        className={classNames(projectcss.all, sty.svg__dCtyg)}
                        role={"img"}
                      />
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bZhnH
                      )}
                    >
                      {"Start Now"}
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__jAs6)}
                    >
                      <ChevronDownIcon
                        className={classNames(projectcss.all, sty.svg__lq6Hy)}
                        role={"img"}
                      />
                    </div>
                  </div>
                </BaseButton>
              </div>
            </div>
          </div>
          <TsfFooter
            data-plasmic-name={"tsfFooter"}
            data-plasmic-override={overrides.tsfFooter}
            className={classNames("__wab_instance", sty.tsfFooter)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "tsfDemandMainNavigation",
    "pageBanner",
    "h1",
    "section",
    "foreground",
    "copy",
    "softBackground3",
    "border3",
    "interactionEffect3",
    "art",
    "h2",
    "softBackground",
    "border",
    "interactionEffect",
    "tsfFooter"
  ],

  tsfDemandMainNavigation: ["tsfDemandMainNavigation"],
  pageBanner: ["pageBanner", "h1"],
  h1: ["h1"],
  section: ["section", "foreground"],
  foreground: ["foreground"],
  copy: ["copy", "softBackground3", "border3", "interactionEffect3"],
  softBackground3: ["softBackground3"],
  border3: ["border3"],
  interactionEffect3: ["interactionEffect3"],
  art: ["art"],
  h2: ["h2"],
  softBackground: ["softBackground"],
  border: ["border"],
  interactionEffect: ["interactionEffect"],
  tsfFooter: ["tsfFooter"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicTsfLiteApp__ArgProps,
          internalVariantPropNames: PlasmicTsfLiteApp__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicTsfLiteApp__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicTsfLiteApp";
  } else {
    func.displayName = `PlasmicTsfLiteApp.${nodeName}`;
  }
  return func;
}

export const PlasmicTsfLiteApp = Object.assign(
  // Top-level PlasmicTsfLiteApp renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    tsfDemandMainNavigation: makeNodeComponent("tsfDemandMainNavigation"),
    pageBanner: makeNodeComponent("pageBanner"),
    h1: makeNodeComponent("h1"),
    section: makeNodeComponent("section"),
    foreground: makeNodeComponent("foreground"),
    copy: makeNodeComponent("copy"),
    softBackground3: makeNodeComponent("softBackground3"),
    border3: makeNodeComponent("border3"),
    interactionEffect3: makeNodeComponent("interactionEffect3"),
    art: makeNodeComponent("art"),
    h2: makeNodeComponent("h2"),
    softBackground: makeNodeComponent("softBackground"),
    border: makeNodeComponent("border"),
    interactionEffect: makeNodeComponent("interactionEffect"),
    tsfFooter: makeNodeComponent("tsfFooter"),
    // Metadata about props expected for PlasmicTsfLiteApp
    internalVariantProps: PlasmicTsfLiteApp__VariantProps,
    internalArgProps: PlasmicTsfLiteApp__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicTsfLiteApp;
/* prettier-ignore-end */
