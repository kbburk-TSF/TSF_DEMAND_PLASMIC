/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 8yhBRaKsBf3R2wKMhT5dUU
// Component: brStoJ-cjM_V
import * as React from "react";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import {
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  hasVariant
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import Header from "../../Header"; // plasmic-import: _SjLXPL93E_I/component
import Button from "../../Button"; // plasmic-import: -U7nCsYlsFbS/component
import HeroSection from "../../HeroSection"; // plasmic-import: JNdKyXMmIYn1/component
import Footer from "../../Footer"; // plasmic-import: uEqGgNuRcZj8/component
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 8yhBRaKsBf3R2wKMhT5dUU/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 8yhBRaKsBf3R2wKMhT5dUU/styleTokensProvider
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic.module.css"; // plasmic-import: 8yhBRaKsBf3R2wKMhT5dUU/projectcss
import sty from "./PlasmicAboutUs.module.css"; // plasmic-import: brStoJ-cjM_V/css
import ArrowRightSvgIcon from "./icons/PlasmicIcon__ArrowRightSvg"; // plasmic-import: WXIx2uHDhf9R/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: _1keoIzHHD8p/icon

createPlasmicElementProxy;

export const PlasmicAboutUs__VariantProps = new Array();

export const PlasmicAboutUs__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicAboutUs__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const globalVariants = _useGlobalVariants();
  const styleTokensClassNames = _useStyleTokens();
  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            styleTokensClassNames,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <div
            data-plasmic-name={"pageBanner"}
            data-plasmic-override={overrides.pageBanner}
            className={classNames(projectcss.all, sty.pageBanner)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__rv2UI)}>
              <div
                data-plasmic-name={"columns"}
                data-plasmic-override={overrides.columns}
                className={classNames(projectcss.all, sty.columns)}
              >
                <div className={classNames(projectcss.all, sty.column__rA0VU)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__bltOr)}
                  >
                    <h1
                      data-plasmic-name={"h1"}
                      data-plasmic-override={overrides.h1}
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1
                      )}
                    >
                      {"About us"}
                    </h1>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nPqNq
                      )}
                    >
                      {
                        "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,"
                      }
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column__aq7Ng)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__qU4XF)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/tsf_demand_website/images/corinneKutzTMi2R5NfoUnsplashJpg.jpg",
                      fullWidth: 1920,
                      fullHeight: 1280,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__lW3Be)}>
            <section
              data-plasmic-name={"features"}
              data-plasmic-override={overrides.features}
              className={classNames(projectcss.all, sty.features)}
            >
              <div className={classNames(projectcss.all, sty.column__zkU4L)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__tovZ
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "WHY CHOOSE US"
                    : "WHY CHOOSE US"}
                </h2>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___6L3S
                  )}
                >
                  {
                    "Lorem Ipsum is simply dummy text of the printing and typesetting industry. \nLorem Ipsum has been the industry's standard dummy text ever since the 1500s"
                  }
                </div>
                <div
                  data-plasmic-name={"container4"}
                  data-plasmic-override={overrides.container4}
                  className={classNames(projectcss.all, sty.container4)}
                >
                  <div
                    data-plasmic-name={"outerRow2"}
                    data-plasmic-override={overrides.outerRow2}
                    className={classNames(projectcss.all, sty.outerRow2)}
                  >
                    <div
                      data-plasmic-name={"row2"}
                      data-plasmic-override={overrides.row2}
                      className={classNames(projectcss.all, sty.row2)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__rVGcN
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__l8Ve0
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__eN32
                            )}
                          />

                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__bp5BU
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "Some value proposition of your service."
                              : "Some value proposition of your service."}
                          </h3>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__grPat
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                              : "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."}
                          </div>
                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.button__fc7Bi
                            )}
                            end={
                              <ArrowRightSvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__m2PQ6
                                )}
                                role={"img"}
                              />
                            }
                            iconEnd={true}
                            label={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__x6BSe
                                )}
                              >
                                {"Learn more"}
                              </div>
                            }
                          />
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__clbFb
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__uo3L)}
                          displayHeight={"400px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"400px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/tsf_demand_website/images/brookeCagleWhwyBmtn30UnsplashJpg.jpg",
                            fullWidth: 1920,
                            fullHeight: 1280,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  data-plasmic-name={"container5"}
                  data-plasmic-override={overrides.container5}
                  className={classNames(projectcss.all, sty.container5)}
                >
                  <div
                    data-plasmic-name={"outerRow3"}
                    data-plasmic-override={overrides.outerRow3}
                    className={classNames(projectcss.all, sty.outerRow3)}
                  >
                    <div
                      data-plasmic-name={"row4"}
                      data-plasmic-override={overrides.row4}
                      className={classNames(projectcss.all, sty.row4)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__jGuHv
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__skWjz)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "100%"
                              : "100%"
                          }
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"auto"}
                          loading={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "lazy"
                              : "lazy"
                          }
                          src={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? {
                                  src: "/plasmic/tsf_demand_website/images/about2Jpg.jpg",
                                  fullWidth: 570,
                                  fullHeight: 650,
                                  aspectRatio: undefined
                                }
                              : {
                                  src: "/plasmic/tsf_demand_website/images/about2Jpg.jpg",
                                  fullWidth: 570,
                                  fullHeight: 650,
                                  aspectRatio: undefined
                                }
                          }
                        />
                      </div>
                      <div
                        className={classNames(projectcss.all, sty.column__ie8O)}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2___7Kp8L
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "We Execute Our Ideas \nThe Start To Finish."
                            : "We Execute Our Ideas \nThe Start To Finish."}
                        </h2>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__bTxt
                          )}
                        >
                          {
                            "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged."
                          }
                        </div>
                        <PlasmicLink__
                          data-plasmic-name={"link"}
                          data-plasmic-override={overrides.link}
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link
                          )}
                          component={Link}
                          platform={"nextjs"}
                        >
                          {false ? (
                            <IconIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__lw8S3
                              )}
                              role={"img"}
                            />
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__tQulm
                            )}
                          >
                            {"LEARN More"}
                          </div>
                          {false ? (
                            <IconIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__oMfgS
                              )}
                              role={"img"}
                            />
                          ) : null}
                        </PlasmicLink__>
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  data-plasmic-name={"container6"}
                  data-plasmic-override={overrides.container6}
                  className={classNames(projectcss.all, sty.container6)}
                >
                  <div
                    data-plasmic-name={"outerRow4"}
                    data-plasmic-override={overrides.outerRow4}
                    className={classNames(projectcss.all, sty.outerRow4)}
                  >
                    <div
                      data-plasmic-name={"row3"}
                      data-plasmic-override={overrides.row3}
                      className={classNames(projectcss.all, sty.row3)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column___0G4Do
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img___9QQb)}
                          displayHeight={"400px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"400px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/tsf_demand_website/images/reading9255891920Jpg.jpg",
                            fullWidth: 1920,
                            fullHeight: 1280,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                      <div
                        className={classNames(projectcss.all, sty.column__hhS2)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__igs6S
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__quvRu
                            )}
                          />

                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3___5ZFda
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "Some value proposition of your service."
                              : "Some value proposition of your service."}
                          </h3>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__uAec6
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                              : "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."}
                          </div>
                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.button__vEbk
                            )}
                            end={
                              <ArrowRightSvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__mmWqg
                                )}
                                role={"img"}
                              />
                            }
                            iconEnd={true}
                            label={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__bylQ
                                )}
                              >
                                {"Learn more"}
                              </div>
                            }
                          />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </section>
            <HeroSection
              data-plasmic-name={"heroSection"}
              data-plasmic-override={overrides.heroSection}
              className={classNames("__wab_instance", sty.heroSection)}
            />
          </div>
          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "pageBanner",
    "columns",
    "h1",
    "features",
    "container4",
    "outerRow2",
    "row2",
    "container5",
    "outerRow3",
    "row4",
    "link",
    "container6",
    "outerRow4",
    "row3",
    "heroSection",
    "footer"
  ],

  header: ["header"],
  pageBanner: ["pageBanner", "columns", "h1"],
  columns: ["columns", "h1"],
  h1: ["h1"],
  features: [
    "features",
    "container4",
    "outerRow2",
    "row2",
    "container5",
    "outerRow3",
    "row4",
    "link",
    "container6",
    "outerRow4",
    "row3"
  ],

  container4: ["container4", "outerRow2", "row2"],
  outerRow2: ["outerRow2", "row2"],
  row2: ["row2"],
  container5: ["container5", "outerRow3", "row4", "link"],
  outerRow3: ["outerRow3", "row4", "link"],
  row4: ["row4", "link"],
  link: ["link"],
  container6: ["container6", "outerRow4", "row3"],
  outerRow4: ["outerRow4", "row3"],
  row3: ["row3"],
  heroSection: ["heroSection"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicAboutUs__ArgProps,
          internalVariantPropNames: PlasmicAboutUs__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicAboutUs__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicAboutUs";
  } else {
    func.displayName = `PlasmicAboutUs.${nodeName}`;
  }
  return func;
}

export const PlasmicAboutUs = Object.assign(
  // Top-level PlasmicAboutUs renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    pageBanner: makeNodeComponent("pageBanner"),
    columns: makeNodeComponent("columns"),
    h1: makeNodeComponent("h1"),
    features: makeNodeComponent("features"),
    container4: makeNodeComponent("container4"),
    outerRow2: makeNodeComponent("outerRow2"),
    row2: makeNodeComponent("row2"),
    container5: makeNodeComponent("container5"),
    outerRow3: makeNodeComponent("outerRow3"),
    row4: makeNodeComponent("row4"),
    link: makeNodeComponent("link"),
    container6: makeNodeComponent("container6"),
    outerRow4: makeNodeComponent("outerRow4"),
    row3: makeNodeComponent("row3"),
    heroSection: makeNodeComponent("heroSection"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicAboutUs
    internalVariantProps: PlasmicAboutUs__VariantProps,
    internalArgProps: PlasmicAboutUs__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicAboutUs;
/* prettier-ignore-end */
